/* Glitch Animation*/
@mixin glitchCopy { 
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
@mixin glitchCopy { 
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.glitch {
color: #02a60241;

animation: glitch-skew 1s infinite linear alternate-reverse;

&::before{

    @include glitchCopy;
    left: .5px;
    text-shadow: -2px 0 #02fa027a;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim 5s infinite linear alternate-reverse;
}
&::after {
    @include glitchCopy;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #02fa0252;
    animation: glitch-anim2 1s infinite linear alternate-reverse;
}
}
@keyframes glitch-anim {
$steps: 40;
@for $i from 0 through $steps {
#{percentage($i*(1/$steps))} {
  clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        transform: skew((random(100) / 100) + deg);
        }
    }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
$steps: 40;
@for $i from 0 through $steps {
#{percentage($i*(2/$steps))} {
  clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        transform: skew((random(100) / 100) + deg);
         }
    }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
$steps: 20;
@for $i from 0 through $steps {
#{percentage($i*(1/$steps))} {
  transform: skew((random(5) - 2) + deg);
        }
    }
}